if &compatible
  set nocompatible
end

" Remove declared plugins
function! s:UnPlug(plug_name)
  if has_key(g:plugs, a:plug_name)
    call remove(g:plugs, a:plug_name)
  endif
endfunction
command!  -nargs=1 UnPlug call s:UnPlug(<args>)

let g:has_async = v:version >= 800 || has('nvim')

call plug#begin('~/.vim/bundle')

" Define bundles via Github repos
Plug 'christoomey/vim-run-interactive'

" If fzf has already been installed via Homebrew, use the existing fzf
" Otherwise, install fzf. The `--all` flag makes fzf accessible outside of vim
if isdirectory("/usr/local/opt/fzf")
  Plug '/usr/local/opt/fzf'
else
  Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
endif

Plug 'junegunn/fzf.vim'
"Plug 'elixir-lang/vim-elixir'
" Plug 'fatih/vim-go'
" Plug 'janko-m/vim-test'
" Plug 'pbrisbin/vim-mkdir'
Plug 'slim-template/vim-slim'
"Plug 'tpope/vim-bundler'
" Plug 'tpope/vim-endwise'
" Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
" Plug 'tpope/vim-projectionist'
"Plug 'tpope/vim-rails'
" Plug 'tpope/vim-rake'
Plug 'tpope/vim-repeat'
Plug 'vim-ruby/vim-ruby'
Plug 'tpope/vim-rhubarb'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-sleuth'
Plug 'vim-scripts/tComment'
Plug 'itchyny/lightline.vim'
Plug 'mengelbrecht/lightline-bufferline'
Plug 'rking/ag.vim'
" Plug 'slashmili/alchemist.vim' " Elixir
Plug 'pangloss/vim-javascript'
" https://github.com/leafgarland/typescript-vim/issues/204
Plug 'leafgarland/typescript-vim' ", {'commit': '31ede5ad905ce4159a5e285073a391daa3bf83fa'} 
Plug 'peitalin/vim-jsx-typescript'
" Plug 'github/copilot.vim'
Plug 'OmniSharp/omnisharp-vim'
" Plug 'puremourning/vimspector'
Plug 'MunifTanjim/nui.nvim' " For ChatGPT
Plug 'nvim-lua/plenary.nvim' " For ChatGPT
Plug 'nvim-telescope/telescope.nvim' " For ChatGPT
" Plug 'jackMort/ChatGPT.nvim'
Plug 'ellisonleao/gruvbox.nvim' " colorscheme

if g:has_async
  Plug 'dense-analysis/ale'
  Plug 'neoclide/coc.nvim', {'branch': 'release'}

  let g:coc_global_extensions = [
    \ 'coc-tsserver',
    \ 'coc-omnisharp'
    \ ]
  if isdirectory('./node_modules') && isdirectory('./node_modules/prettier')
    let g:coc_global_extensions += ['coc-prettier']
  endif

  if isdirectory('./node_modules') && isdirectory('./node_modules/eslint')
    let g:coc_global_extensions += ['coc-eslint']
  endif
  let g:ale_linters = {
  \ 'cs': ['OmniSharp']
  \}
endif


if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()

" lua <<EOF
" -- chat gpt
" require("chatgpt").setup()
" EOF
